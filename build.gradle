// queryDsl 사용을 위한 queryDsl 버전 정보 추가
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.8'
    id 'io.spring.dependency-management' version '1.1.0'

    // queryDsl 사용을 위한 queryDsl 플러그인 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.umc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // API 문서화를 위한 swagger 의존성 추가
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    
    // 유효성 검사를 위한 validation 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JWT 구현을 위한 jsonwebtoken 의존성 추가
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // queryDsl 사용을 위한 queryDsl 의존성 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"

    // 소켓 사용을 위한 websocket 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'mysql:mysql-connector-java'
}

tasks.named('test') {
    useJUnitPlatform()
}

/*
 * queryDSL 설정 추가
 */

// queryDsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// queryDsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
// queryDsl 이 compileClassPath 를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}